//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIO.AccountWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:account", ConfigurationName="AccountWebService.accountPortType")]
    public interface accountPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#createAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string createAccount(string nick, string password, string mail, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#createAccount", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> createAccountAsync(string nick, string password, string mail, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#updateaccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string updateAccount(string password, string token, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#updateaccount", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> updateAccountAsync(string password, string token, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#deleteAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string deleteAccount(string token, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#deleteAccount", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> deleteAccountAsync(string token, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#loginAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string loginAccount(string nick, string password, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#loginAccount", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> loginAccountAsync(string nick, string password, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#logoutAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string logoutAccount(string nick, string token, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#logoutAccount", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> logoutAccountAsync(string nick, string token, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#updatedFetchSessionData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string updatedFetchSessionData(string nick, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#updatedFetchSessionData", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> updatedFetchSessionDataAsync(string nick, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#getAllAccounts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        AIO.AccountWebService.accountList getAllAccounts(string nick);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#getAllAccounts", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<AIO.AccountWebService.accountList> getAllAccountsAsync(string nick);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#forgotPasswordToMailSend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string forgotPasswordToMailSend(string mail, string authority);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:account#forgotPasswordToMailSend", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> forgotPasswordToMailSendAsync(string mail, string authority);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:account")]
    public partial class accountList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private account accountField;
        
        /// <remarks/>
        public account account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
                this.RaisePropertyChanged("account");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:account")]
    public partial class account : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nickField;
        
        private string mailField;
        
        private string moneyField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        public string nick {
            get {
                return this.nickField;
            }
            set {
                this.nickField = value;
                this.RaisePropertyChanged("nick");
            }
        }
        
        /// <remarks/>
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
                this.RaisePropertyChanged("mail");
            }
        }
        
        /// <remarks/>
        public string money {
            get {
                return this.moneyField;
            }
            set {
                this.moneyField = value;
                this.RaisePropertyChanged("money");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface accountPortTypeChannel : AIO.AccountWebService.accountPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class accountPortTypeClient : System.ServiceModel.ClientBase<AIO.AccountWebService.accountPortType>, AIO.AccountWebService.accountPortType {
        
        public accountPortTypeClient() {
        }
        
        public accountPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public accountPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public accountPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public accountPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string createAccount(string nick, string password, string mail, string authority) {
            return base.Channel.createAccount(nick, password, mail, authority);
        }
        
        public System.Threading.Tasks.Task<string> createAccountAsync(string nick, string password, string mail, string authority) {
            return base.Channel.createAccountAsync(nick, password, mail, authority);
        }
        
        public string updateAccount(string password, string token, string authority) {
            return base.Channel.updateAccount(password, token, authority);
        }
        
        public System.Threading.Tasks.Task<string> updateAccountAsync(string password, string token, string authority) {
            return base.Channel.updateAccountAsync(password, token, authority);
        }
        
        public string deleteAccount(string token, string authority) {
            return base.Channel.deleteAccount(token, authority);
        }
        
        public System.Threading.Tasks.Task<string> deleteAccountAsync(string token, string authority) {
            return base.Channel.deleteAccountAsync(token, authority);
        }
        
        public string loginAccount(string nick, string password, string authority) {
            return base.Channel.loginAccount(nick, password, authority);
        }
        
        public System.Threading.Tasks.Task<string> loginAccountAsync(string nick, string password, string authority) {
            return base.Channel.loginAccountAsync(nick, password, authority);
        }
        
        public string logoutAccount(string nick, string token, string authority) {
            return base.Channel.logoutAccount(nick, token, authority);
        }
        
        public System.Threading.Tasks.Task<string> logoutAccountAsync(string nick, string token, string authority) {
            return base.Channel.logoutAccountAsync(nick, token, authority);
        }
        
        public string updatedFetchSessionData(string nick, string token) {
            return base.Channel.updatedFetchSessionData(nick, token);
        }
        
        public System.Threading.Tasks.Task<string> updatedFetchSessionDataAsync(string nick, string token) {
            return base.Channel.updatedFetchSessionDataAsync(nick, token);
        }
        
        public AIO.AccountWebService.accountList getAllAccounts(string nick) {
            return base.Channel.getAllAccounts(nick);
        }
        
        public System.Threading.Tasks.Task<AIO.AccountWebService.accountList> getAllAccountsAsync(string nick) {
            return base.Channel.getAllAccountsAsync(nick);
        }
        
        public string forgotPasswordToMailSend(string mail, string authority) {
            return base.Channel.forgotPasswordToMailSend(mail, authority);
        }
        
        public System.Threading.Tasks.Task<string> forgotPasswordToMailSendAsync(string mail, string authority) {
            return base.Channel.forgotPasswordToMailSendAsync(mail, authority);
        }
    }
}
